// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  role         Role   @default(USER)
  level        Level  @default(SPROUT)
  nickname     String
  phone        String
  profileImage String
  kakaoId      String   @unique

  reviews      Review[]
  orders       Order[]
  carts        Cart[]
}

model Notice {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title     String
  content   String
}

model Question {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title     String
  content   String
}

model Product {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  name        String
  price       Int
  description String

  reviews     Review[]
  orders      Order[]
  carts       Cart[]
}

model Order {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String

  @@index([userId])
  @@index([productId])
}

model Review {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title     String
  content   String
  rating    Int

  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String

  @@index([userId])
  @@index([productId])
}

model Cart {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  quantity  Int

  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String

  @@index([userId])
  @@index([productId])
}

enum Role {
  ADMIN
  USER
}

enum Level {
  SPROUT
  SILVER
  GOLD
  DIAMOND
}